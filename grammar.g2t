S = Statements;

Statements = Statement Statements | ^;
Block = Statement | { Statements };

Statement = IfStatement
		  | WhileStatement
		  | PrintStatement
		  | BreakStatement
		  | ContinueStatement
		  | ExpressionStatement
		  | Assignment
		  | EmptyStatement;

IfStatement = if ( Expression ) Block ElseBlock;
ElseBlock = else Block | ^;
PrintStatement = print Expression \; | println Expression \; ;
WhileStatement = while ( Expression ) Block;
BreakStatement = break \; ;
ContinueStatement = continue \; ;
ExpressionStatement = Expression \; ;
Assignment = identifier \= Expression \; ;
EmptyStatement = \; ;

Expression = Add;
Add = Add + Sub | Sub;
Sub = Sub - Mul | Mul;
Mul = Mul * Div | Div;
Div = Div / Mod | Mod;
Mod = Mod % Equals | Equals;
Equals = Equals \=\= NotEquals | NotEquals;
NotEquals = NotEquals !\= GreaterThan | GreaterThan;
GreaterThan = GreaterThan > LessThan | LessThan;
LessThan = LessThan < GreaterThanEquals | GreaterThanEquals;
GreaterThanEquals = GreaterThanEquals >\= LessThanEquals | LessThanEquals;
LessThanEquals = LessThanEquals <\= Or | Or;
Or = Or \|\| And | And;
And = And && Unary | Unary;
Unary = Parenthesed | Negate | Atom;
Parenthesed = ( Expression );
Negate = - Unary;
Atom = value | identifier;